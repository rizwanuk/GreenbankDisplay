// scripts/generate-version.js
import { readFileSync, writeFileSync, mkdirSync } from "fs";
import { execSync } from "child_process";
import { dirname } from "path";
import { fileURLToPath } from "url";

const __dirname = dirname(fileURLToPath(import.meta.url));

function shortGit() {
  try {
    return execSync("git rev-parse --short HEAD").toString().trim();
  } catch {
    return "";
  }
}

const pkg = JSON.parse(readFileSync(new URL("../package.json", import.meta.url), "utf8"));
const version = pkg.version || "";
const sha = process.env.VERCEL_GIT_COMMIT_SHA?.slice(0, 7) || shortGit() || "";
const stamp = new Date().toISOString();

const content = `// Auto-generated by scripts/generate-version.js
export const APP_VERSION = ${JSON.stringify(version || sha || "dev")};
export const APP_BUILD = ${JSON.stringify({ version, sha, stamp })};
`;

mkdirSync(new URL("../src", import.meta.url), { recursive: true });
writeFileSync(new URL("../src/version.js", import.meta.url), content, "utf8");
console.log("Wrote src/version.js â†’", { version, sha, stamp });
