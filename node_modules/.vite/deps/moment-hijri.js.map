{
  "version": 3,
  "sources": ["../../moment-hijri/moment-hijri.js"],
  "sourcesContent": ["// moment-hijri.js\n// author: Suhail Alkowaileet\n// This is a modified version of moment-jalaali by Behrang Noruzi Niya\n// license: MIT\n/* jshint esversion: 6 */\n'use strict';\n\n/************************************\n    Expose Moment Hijri\n************************************/\n(function (root, factory) {\n\t/* global define */\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], function (moment) {\n\t\t\troot.moment = factory(moment)\n\t\t\treturn root.moment\n\t\t})\n\t} else if (typeof exports === 'object') {\n\t\tmodule.exports = factory(require('moment/moment'))\n\t} else {\n\t\troot.moment = factory(root.moment)\n\t}\n})(this, function (moment) { // jshint ignore:line\n\n\tif (moment == null) {\n\t\tthrow new Error('Cannot find moment')\n\t}\n\n\t/************************************\n      Constants\n  ************************************/\n\n\tvar ummalqura = {\n\t\tummalquraData : (function (){\n\t\t\tlet ummalquraDatByMonth = [\n\t\t\t\t\t/* 1356= */29, 29, 30, 29, 30, 29, 30, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1357= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1358= */30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,\n\t\t\t\t\t/* 1359= */30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1360= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1361= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1362= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1363= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1364= */30, 29, 30, 29, 30, 29, 30, 28, 30, 30, 30, 29,\n\t\t\t\t\t/* 1365= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1366= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1367= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1368= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1369= */30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1370= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1371= */30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,\n\t\t\t\t\t/* 1372= */29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1373= */29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1374= */30, 29, 30, 29, 30, 29, 30, 30, 29, 29, 30, 30,\n\t\t\t\t\t/* 1375= */30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29,\n\t\t\t\t\t/* 1376= */29, 30, 29, 29, 30, 30, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1377= */30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30,\n\t\t\t\t\t/* 1378= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1379= */29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1380= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1381= */30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1382= */30, 29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1383= */29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1384= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1385= */30, 29, 30, 30, 29, 29, 30, 29, 30, 30, 30, 29,\n\t\t\t\t\t/* 1386= */30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1387= */29, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1388= */29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1389= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1390= */30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 29,\n\t\t\t\t\t/* 1391= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1392= */29, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1393= */30, 29, 30, 29, 29, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1394= */30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 30, 29,\n\t\t\t\t\t/* 1395= */30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1396= */30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1397= */29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1398= */30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1399= */29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1400= */30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1401= */29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1402= */30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1403= */29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1404= */29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1405= */29, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1406= */30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1407= */29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1408= */30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1409= */30, 29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1410= */30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1411= */29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29,\n\t\t\t\t\t/* 1412= */30, 29, 29, 30, 30, 29, 30, 30, 30, 29, 30, 29,\n\t\t\t\t\t/* 1413= */29, 30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30,\n\t\t\t\t\t/* 1414= */29, 29, 30, 29, 29, 30, 29, 30, 30, 30, 29, 30,\n\t\t\t\t\t/* 1415= */29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1416= */30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1417= */30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 29,\n\t\t\t\t\t/* 1418= */30, 29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1419= */29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1420= */29, 30, 29, 29, 30, 29, 30, 30, 30, 30, 29, 30,\n\t\t\t\t\t/* 1421= */29, 29, 30, 29, 29, 29, 30, 30, 30, 30, 29, 30,\n\t\t\t\t\t/* 1422= */30, 29, 29, 30, 29, 29, 29, 30, 30, 30, 29, 30,\n\t\t\t\t\t/* 1423= */30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1424= */30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1425= */30, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29,\n\t\t\t\t\t/* 1426= */29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1427= */29, 29, 30, 29, 29, 30, 30, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1428= */30, 29, 29, 30, 29, 29, 30, 30, 30, 29, 30, 30,\n\t\t\t\t\t/* 1429= */29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30,\n\t\t\t\t\t/* 1430= */29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1431= */29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1432= */29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29, 29,\n\t\t\t\t\t/* 1433= */30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1434= */29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 29,\n\t\t\t\t\t/* 1435= */30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1436= */29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1437= */30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1438= */30, 29, 30, 30, 30, 29, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1439= */30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1440= */29, 30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 29,\n\t\t\t\t\t/* 1441= */30, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29,\n\t\t\t\t\t/* 1442= */29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30, 29,\n\t\t\t\t\t/* 1443= */30, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1444= */29, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1445= */29, 30, 30, 30, 29, 30, 29, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1446= */29, 30, 30, 30, 29, 30, 30, 29, 29, 30, 29, 29,\n\t\t\t\t\t/* 1447= */30, 29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1448= */29, 30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1449= */29, 29, 30, 29, 30, 29, 30, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1450= */30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1451= */30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1452= */30, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1453= */29, 30, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1454= */29, 30, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1455= */29, 29, 30, 30, 29, 30, 29, 30, 30, 29, 30, 29,\n\t\t\t\t\t/* 1456= */30, 29, 29, 30, 29, 30, 29, 30, 30, 30, 29, 30,\n\t\t\t\t\t/* 1457= */29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30, 30,\n\t\t\t\t\t/* 1458= */30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1459= */30, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 29,\n\t\t\t\t\t/* 1460= */30, 30, 29, 30, 29, 30, 29, 30, 29, 29, 30, 30,\n\t\t\t\t\t/* 1461= */29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1462= */30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1463= */29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1464= */30, 29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 30,\n\t\t\t\t\t/* 1465= */29, 30, 29, 30, 29, 29, 30, 29, 29, 30, 30, 30,\n\t\t\t\t\t/* 1466= */30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1467= */30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1468= */30, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1469= */29, 29, 30, 30, 29, 30, 30, 29, 30, 30, 29, 29,\n\t\t\t\t\t/* 1470= */30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 30, 29,\n\t\t\t\t\t/* 1471= */29, 30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1472= */30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1473= */30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1474= */30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1475= */29, 30, 29, 30, 30, 30, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1476= */29, 30, 29, 30, 30, 30, 29, 30, 30, 29, 29, 30,\n\t\t\t\t\t/* 1477= */29, 29, 30, 29, 30, 30, 29, 30, 30, 30, 29, 29,\n\t\t\t\t\t/* 1478= */30, 29, 29, 30, 29, 30, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1479= */29, 30, 29, 29, 30, 29, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1480= */29, 30, 30, 29, 29, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1481= */29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1482= */30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1483= */29, 29, 30, 30, 29, 30, 30, 30, 29, 30, 29, 29,\n\t\t\t\t\t/* 1484= */30, 29, 29, 30, 30, 29, 30, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1485= */29, 30, 29, 29, 30, 30, 29, 30, 29, 30, 30, 30,\n\t\t\t\t\t/* 1486= */29, 29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1487= */29, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1488= */29, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1489= */29, 30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29,\n\t\t\t\t\t/* 1490= */30, 29, 30, 30, 29, 30, 30, 29, 30, 29, 29, 30,\n\t\t\t\t\t/* 1491= */29, 30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 30,\n\t\t\t\t\t/* 1492= */29, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1493= */30, 29, 29, 30, 29, 30, 29, 29, 30, 30, 29, 30,\n\t\t\t\t\t/* 1494= */30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1495= */30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1496= */30, 30, 30, 29, 30, 29, 30, 29, 29, 30, 29, 30,\n\t\t\t\t\t/* 1497= */29, 30, 30, 29, 30, 30, 29, 29, 30, 29, 30, 29,\n\t\t\t\t\t/* 1498= */30, 29, 30, 29, 30, 30, 29, 30, 29, 30, 29, 30,\n\t\t\t\t\t/* 1499= */29, 30, 29, 30, 29, 30, 29, 30, 29, 30, 30, 29,\n\t\t\t\t\t/* 1500= */30, 30, 29, 29, 30, 29, 29, 30, 29, 30, 30, 30 ];\n\t\t\tlet sum = 28607;\n\t\t\tconst dat = [sum];\n\t\t\tummalquraDatByMonth.forEach((value) => {\n\t\t\t\tsum += value;\n\t\t\t\tdat.push(sum);\n\t\t\t});\n\t\t\treturn dat;\n\t\t})()\n\t}\n\n\tvar formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?i(Mo|MM?M?M?|Do|DDDo|DD?D?D?|w[o|w]?|YYYYY|YYYY|YY|gg(ggg?)?)|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g,\n\t\tlocalFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g\n\n\t, parseTokenOneOrTwoDigits = /\\d\\d?/, parseTokenOneToThreeDigits = /\\d{1,3}/, parseTokenThreeDigits = /\\d{3}/, parseTokenFourDigits = /\\d{1,4}/, parseTokenSixDigits = /[+\\-]?\\d{1,6}/, parseTokenWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.?)|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i, parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/i, parseTokenT = /T/i, parseTokenTimestampMs = /[\\+\\-]?\\d+(\\.\\d{1,3})?/\n\n\t, unitAliases = {\n\t\thd: 'idate',\n\t\thm: 'imonth',\n\t\thy: 'iyear'\n\t}\n\n\t, formatFunctions = {}\n\n\t, ordinalizeTokens = 'DDD w M D'.split(' '), paddedTokens = 'M D w'.split(' ')\n\n\t, formatTokenFunctions = {\n\t\tiM: function () {\n\t\t\treturn this.iMonth() + 1\n\t\t},\n\t\tiMMM: function (format) {\n\t\t\treturn this.localeData().iMonthsShort(this, format)\n\t\t},\n\t\tiMMMM: function (format) {\n\t\t\treturn this.localeData().iMonths(this, format)\n\t\t},\n\t\tiD: function () {\n\t\t\treturn this.iDate()\n\t\t},\n\t\tiDDD: function () {\n\t\t\treturn this.iDayOfYear()\n\t\t},\n\t\tiw: function () {\n\t\t\treturn this.iWeek()\n\t\t},\n\t\tiYY: function () {\n\t\t\treturn leftZeroFill(this.iYear() % 100, 2)\n\t\t},\n\t\tiYYYY: function () {\n\t\t\treturn leftZeroFill(this.iYear(), 4)\n\t\t},\n\t\tiYYYYY: function () {\n\t\t\treturn leftZeroFill(this.iYear(), 5)\n\t\t},\n\t\tigg: function () {\n\t\t\treturn leftZeroFill(this.iWeekYear() % 100, 2)\n\t\t},\n\t\tigggg: function () {\n\t\t\treturn this.iWeekYear()\n\t\t},\n\t\tiggggg: function () {\n\t\t\treturn leftZeroFill(this.iWeekYear(), 5)\n\t\t}\n\t}, i\n\n\tfunction padToken(func, count) {\n\t\treturn function (a) {\n\t\t\treturn leftZeroFill(func.call(this, a), count)\n\t\t}\n\t}\n\n\tfunction ordinalizeToken(func, period) {\n\t\treturn function (a) {\n\t\t\treturn this.localeData().ordinal(func.call(this, a), period)\n\t\t}\n\t}\n\n\twhile (ordinalizeTokens.length) {\n\t\ti = ordinalizeTokens.pop()\n\t\tformatTokenFunctions['i' + i + 'o'] = ordinalizeToken(formatTokenFunctions['i' + i], i)\n\t}\n\twhile (paddedTokens.length) {\n\t\ti = paddedTokens.pop()\n\t\tformatTokenFunctions['i' + i + i] = padToken(formatTokenFunctions['i' + i], 2)\n\t}\n\tformatTokenFunctions.iDDDD = padToken(formatTokenFunctions.iDDD, 3)\n\n\t/************************************\n      Helpers\n  ************************************/\n\n\tfunction extend(a, b) {\n\t\tvar key\n\t\tfor (key in b)\n\t\t\tif (b.hasOwnProperty(key))\n\t\t\t\ta[key] = b[key]\n\t\treturn a\n\t}\n\n\tfunction leftZeroFill(number, targetLength) {\n\t\tvar output = number + ''\n\t\twhile (output.length < targetLength)\n\t\t\toutput = '0' + output\n\t\treturn output\n\t}\n\n\tfunction isArray(input) {\n\t\treturn Object.prototype.toString.call(input) === '[object Array]'\n\t}\n\n\tfunction normalizeUnits(units) {\n\t\treturn units ? unitAliases[units] || units.toLowerCase().replace(/(.)s$/, '$1') : units\n\t}\n\n\tfunction setDate(moment, year, month, date) {\n\t\tvar utc = moment._isUTC ? 'UTC' : ''\n\t\tmoment._d['set' + utc + 'FullYear'](year)\n\t\tmoment._d['set' + utc + 'Month'](month)\n\t\tmoment._d['set' + utc + 'Date'](date)\n\t}\n\n\tfunction objectCreate(parent) {\n\t\tfunction F() {}\n\t\tF.prototype = parent\n\t\treturn new F()\n\t}\n\n\tfunction getPrototypeOf(object) {\n\t\tif (Object.getPrototypeOf)\n\t\t\treturn Object.getPrototypeOf(object)\n\t\telse if (''.__proto__) // jshint ignore:line\n\t\t\treturn object.__proto__ // jshint ignore:line\n\t\telse\n\t\t\treturn object.constructor.prototype\n\t}\n\n\t/************************************\n      Languages\n  ************************************/\n\textend(getPrototypeOf(moment.localeData()), {\n\t\t_iMonths: ['Muharram'\n                , 'Safar'\n                , 'Rabi\\' al-Awwal'\n                , 'Rabi\\' al-Thani'\n                , 'Jumada al-Ula'\n                , 'Jumada al-Alkhirah'\n                , 'Rajab'\n                , 'Sha’ban'\n                , 'Ramadhan'\n                , 'Shawwal'\n                , 'Thul-Qi’dah'\n                , 'Thul-Hijjah'\n                ],\n\t\tiMonths: function (m) {\n\t\t\treturn this._iMonths[m.iMonth()]\n\t\t}\n\n\t\t,\n\t\t_iMonthsShort: ['Muh'\n                      , 'Saf'\n                      , 'Rab-I'\n                      , 'Rab-II'\n                      , 'Jum-I'\n                      , 'Jum-II'\n                      , 'Raj'\n                      , 'Sha'\n                      , 'Ram'\n                      , 'Shw'\n                      , 'Dhu-Q'\n                      , 'Dhu-H'\n                      ],\n\t\tiMonthsShort: function (m) {\n\t\t\treturn this._iMonthsShort[m.iMonth()]\n\t\t}\n\n\t\t,\n\t\tiMonthsParse: function (monthName) {\n\t\t\tvar i, mom, regex\n\t\t\tif (!this._iMonthsParse)\n\t\t\t\tthis._iMonthsParse = []\n\t\t\tfor (i = 0; i < 12; i += 1) {\n\t\t\t\t// Make the regex if we don't have it already.\n\t\t\t\tif (!this._iMonthsParse[i]) {\n\t\t\t\t\tmom = hMoment([2000, (2 + i) % 12, 25])\n\t\t\t\t\tregex = '^' + this.iMonths(mom, '') + '$|^' + this.iMonthsShort(mom, '') + '$'\n\t\t\t\t\tthis._iMonthsParse[i] = new RegExp(regex.replace('.', ''), 'i')\n\t\t\t\t}\n\t\t\t\t// Test the regex.\n\t\t\t\tif (this._iMonthsParse[i].test(monthName))\n\t\t\t\t\treturn i\n\t\t\t}\n\t\t}\n\t});\n\tvar iMonthNames = {\n\t\tiMonths: 'محرم_صفر_ربيع الأول_ربيع الثاني_جمادى الأولى_جمادى الآخرة_رجب_شعبان_رمضان_شوال_ذو القعدة_ذو الحجة'.split('_'),\n\t\tiMonthsShort: 'محرم_صفر_ربيع ١_ربيع ٢_جمادى ١_جمادى ٢_رجب_شعبان_رمضان_شوال_ذو القعدة_ذو الحجة'.split('_')\n\t};\n\n\t// Default to the momentjs 2.12+ API\n\tif (typeof moment.updateLocale === 'function') {\n\t\tmoment.updateLocale('ar-sa', iMonthNames);\n\t} else {\n\t\tvar oldLocale = moment.locale();\n\t\tmoment.defineLocale('ar-sa', iMonthNames);\n\t\tmoment.locale(oldLocale);\n\t}\n\n\t/************************************\n      Formatting\n  ************************************/\n\n\tfunction makeFormatFunction(format) {\n\t\tvar array = format.match(formattingTokens),\n\t\t\tlength = array.length,\n\t\t\ti\n\n\t\tfor (i = 0; i < length; i += 1)\n\t\t\tif (formatTokenFunctions[array[i]])\n\t\t\t\tarray[i] = formatTokenFunctions[array[i]]\n\n\t\treturn function (mom) {\n\t\t\tvar output = ''\n\t\t\tfor (i = 0; i < length; i += 1)\n\t\t\t\toutput += array[i] instanceof Function ? '[' + array[i].call(mom, format) + ']' : array[i]\n\t\t\treturn output\n\t\t}\n\t}\n\n\t/************************************\n      Parsing\n  ************************************/\n\n\tfunction getParseRegexForToken(token, config) {\n\t\tswitch (token) {\n\t\tcase 'iDDDD':\n\t\t\treturn parseTokenThreeDigits\n\t\tcase 'iYYYY':\n\t\t\treturn parseTokenFourDigits\n\t\tcase 'iYYYYY':\n\t\t\treturn parseTokenSixDigits\n\t\tcase 'iDDD':\n\t\t\treturn parseTokenOneToThreeDigits\n\t\tcase 'iMMM':\n\t\tcase 'iMMMM':\n\t\t\treturn parseTokenWord\n\t\tcase 'iMM':\n\t\tcase 'iDD':\n\t\tcase 'iYY':\n\t\tcase 'iM':\n\t\tcase 'iD':\n\t\t\treturn parseTokenOneOrTwoDigits\n\t\tcase 'DDDD':\n\t\t\treturn parseTokenThreeDigits\n\t\tcase 'YYYY':\n\t\t\treturn parseTokenFourDigits\n\t\tcase 'YYYYY':\n\t\t\treturn parseTokenSixDigits\n\t\tcase 'S':\n\t\tcase 'SS':\n\t\tcase 'SSS':\n\t\tcase 'DDD':\n\t\t\treturn parseTokenOneToThreeDigits\n\t\tcase 'MMM':\n\t\tcase 'MMMM':\n\t\tcase 'dd':\n\t\tcase 'ddd':\n\t\tcase 'dddd':\n\t\t\treturn parseTokenWord\n\t\tcase 'a':\n\t\tcase 'A':\n\t\t\treturn moment.localeData(config._l)._meridiemParse\n\t\tcase 'X':\n\t\t\treturn parseTokenTimestampMs\n\t\tcase 'Z':\n\t\tcase 'ZZ':\n\t\t\treturn parseTokenTimezone\n\t\tcase 'T':\n\t\t\treturn parseTokenT\n\t\tcase 'MM':\n\t\tcase 'DD':\n\t\tcase 'YY':\n\t\tcase 'HH':\n\t\tcase 'hh':\n\t\tcase 'mm':\n\t\tcase 'ss':\n\t\tcase 'M':\n\t\tcase 'D':\n\t\tcase 'd':\n\t\tcase 'H':\n\t\tcase 'h':\n\t\tcase 'm':\n\t\tcase 's':\n\t\t\treturn parseTokenOneOrTwoDigits\n\t\tdefault:\n\t\t\treturn new RegExp(token.replace('\\\\', ''))\n\t\t}\n\t}\n\n\tfunction addTimeToArrayFromToken(token, input, config) {\n\t\tvar a, datePartArray = config._a\n\n\t\tswitch (token) {\n\t\tcase 'iM':\n\t\tcase 'iMM':\n\t\t\tdatePartArray[1] = input == null ? 0 : ~~input - 1\n\t\t\tbreak\n\t\tcase 'iMMM':\n\t\tcase 'iMMMM':\n\t\t\ta = moment.localeData(config._l).iMonthsParse(input)\n\t\t\tif (a != null)\n\t\t\t\tdatePartArray[1] = a\n\t\t\telse\n\t\t\t\tconfig._isValid = false\n\t\t\tbreak\n\t\tcase 'iD':\n\t\tcase 'iDD':\n\t\tcase 'iDDD':\n\t\tcase 'iDDDD':\n\t\t\tif (input != null)\n\t\t\t\tdatePartArray[2] = ~~input\n\t\t\tbreak\n\t\tcase 'iYY':\n\t\t\tdatePartArray[0] = ~~input + (~~input > 47 ? 1300 : 1400)\n\t\t\tbreak\n\t\tcase 'iYYYY':\n\t\tcase 'iYYYYY':\n\t\t\tdatePartArray[0] = ~~input\n\t\t}\n\t\tif (input == null)\n\t\t\tconfig._isValid = false\n\t}\n\n\tfunction dateFromArray(config) {\n\t\tvar g, h, hy = config._a[0],\n\t\t\thm = config._a[1],\n\t\t\thd = config._a[2]\n\n\t\tif ((hy == null) && (hm == null) && (hd == null))\n\t\t\treturn [0, 0, 1]\n\t\thy = hy || 0\n\t\thm = hm || 0\n\t\thd = hd || 1\n\t\tif (hd < 1 || hd > hMoment.iDaysInMonth(hy, hm))\n\t\t\tconfig._isValid = false\n\t\tg = toGregorian(hy, hm, hd)\n\t\th = toHijri(g.gy, g.gm, g.gd)\n\t\tconfig._hDiff = 0\n\t\tif (~~h.hy !== hy)\n\t\t\tconfig._hDiff += 1\n\t\tif (~~h.hm !== hm)\n\t\t\tconfig._hDiff += 1\n\t\tif (~~h.hd !== hd)\n\t\t\tconfig._hDiff += 1\n\t\treturn [g.gy, g.gm, g.gd]\n\t}\n\n\tfunction makeDateFromStringAndFormat(config) {\n\t\tvar tokens = config._f.match(formattingTokens),\n\t\t\tstring = config._i,\n\t\t\tlen = tokens.length,\n\t\t\ti, token, parsedInput\n\n\t\tconfig._a = []\n\n\t\tfor (i = 0; i < len; i += 1) {\n\t\t\ttoken = tokens[i]\n\t\t\tparsedInput = (getParseRegexForToken(token, config).exec(string) || [])[0];\n\t\t\tif (parsedInput)\n\t\t\t\tstring = string.slice(string.indexOf(parsedInput) + parsedInput.length)\n\t\t\tif (formatTokenFunctions[token])\n\t\t\t\taddTimeToArrayFromToken(token, parsedInput, config)\n\t\t}\n\t\tif (string)\n\t\t\tconfig._il = string\n\n\t\treturn dateFromArray(config)\n\t}\n\n\tfunction makeDateFromStringAndArray(config, utc) {\n\t\tvar len = config._f.length\n\t\t, i\n\t\t, format\n\t\t, tempMoment\n\t\t, bestMoment\n\t\t, currentScore\n\t\t, scoreToBeat\n\n\t\tif (len === 0) {\n\t\t\treturn makeMoment(new Date(NaN))\n\t\t}\n\n\t\tfor (i = 0; i < len; i += 1) {\n\t\t\tformat = config._f[i]\n\t\t\tcurrentScore = 0\n\t\t\ttempMoment = makeMoment(config._i, format, config._l, utc)\n\n\t\t\tif (!tempMoment.isValid()) continue\n\n\t\t\tcurrentScore += tempMoment._hDiff\n\t\t\tif (tempMoment._il)\n\t\t\t\tcurrentScore += tempMoment._il.length\n\t\t\tif (scoreToBeat == null || currentScore < scoreToBeat) {\n\t\t\t\tscoreToBeat = currentScore\n\t\t\t\tbestMoment = tempMoment\n\t\t\t}\n\t\t}\n\n\t\treturn bestMoment\n\t}\n\n\tfunction removeParsedTokens(config) {\n\t\tvar string = config._i,\n\t\t\tinput = '',\n\t\t\tformat = '',\n\t\t\tarray = config._f.match(formattingTokens),\n\t\t\tlen = array.length,\n\t\t\ti, match, parsed\n\n\t\tfor (i = 0; i < len; i += 1) {\n\t\t\tmatch = array[i]\n\t\t\tparsed = (getParseRegexForToken(match, config).exec(string) || [])[0]\n\t\t\tif (parsed)\n\t\t\t\tstring = string.slice(string.indexOf(parsed) + parsed.length)\n\t\t\tif (!(formatTokenFunctions[match] instanceof Function)) {\n\t\t\t\tformat += match\n\t\t\t\tif (parsed)\n\t\t\t\t\tinput += parsed\n\t\t\t}\n\t\t}\n\t\tconfig._i = input\n\t\tconfig._f = format\n\t}\n\n\t/************************************\n      Week of Year\n  ************************************/\n\n\tfunction iWeekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n\t\tvar end = firstDayOfWeekOfYear - firstDayOfWeek,\n\t\t\tdaysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n\t\t\tadjustedMoment\n\n\t\tif (daysToDayOfWeek > end) {\n\t\t\tdaysToDayOfWeek -= 7\n\t\t}\n\t\tif (daysToDayOfWeek < end - 7) {\n\t\t\tdaysToDayOfWeek += 7\n\t\t}\n\t\tadjustedMoment = hMoment(mom).add(daysToDayOfWeek, 'd')\n\t\treturn {\n\t\t\tweek: Math.ceil(adjustedMoment.iDayOfYear() / 7),\n\t\t\tyear: adjustedMoment.iYear()\n\t\t}\n\t}\n\n\t/************************************\n      Top Level Functions\n  ************************************/\n\n\tfunction makeMoment(input, format, lang, utc) {\n\t\tvar config =\n\t\t\t{ _i: input\n\t\t\t, _f: format\n\t\t\t, _l: lang\n\t\t\t}\n\t\t\t, date\n\t\t\t, m\n\t\t\t, hm\n\t\tif (format) {\n\t\t\tif (isArray(format)) {\n\t\t\t\treturn makeDateFromStringAndArray(config, utc)\n\t\t\t} else {\n\t\t\t\tdate = makeDateFromStringAndFormat(config)\n\t\t\t\tremoveParsedTokens(config)\n\t\t\t\tformat = 'YYYY-MM-DD-' + config._f\n\t\t\t\tinput = leftZeroFill(date[0], 4) + '-'\n\t\t\t\t\t+ leftZeroFill(date[1] + 1, 2) + '-'\n\t\t\t\t\t+ leftZeroFill(date[2], 2) + '-'\n\t\t\t\t\t+ config._i\n\t\t\t}\n\t\t}\n\t\tif (utc)\n\t\t\tm = moment.utc(input, format, lang)\n\t\telse\n\t\t\tm = moment(input, format, lang)\n\t\tif (config._isValid === false)\n\t\t\tm._isValid = false\n\t\tm._hDiff = config._hDiff || 0\n\t\thm = objectCreate(hMoment.fn)\n\t\textend(hm, m)\n\t\treturn hm\n\t}\n\n\tfunction hMoment(input, format, lang) {\n\t\treturn makeMoment(input, format, lang, false)\n\t}\n\n\textend(hMoment, moment)\n\thMoment.fn = objectCreate(moment.fn)\n\n\thMoment.utc = function (input, format, lang) {\n\t\treturn makeMoment(input, format, lang, true)\n\t}\n\n\t/************************************\n      hMoment Prototype\n  ************************************/\n\n\thMoment.fn.format = function (format) {\n\t\tvar i, replace, me = this\n\n\t\tif (format) {\n\t\t\ti = 5\n\t\t\treplace = function (input) {\n\t\t\t\treturn me.localeData().longDateFormat(input) || input\n\t\t\t}\n\t\t\twhile (i > 0 && localFormattingTokens.test(format)) {\n\t\t\t\ti -= 1\n\t\t\t\tformat = format.replace(localFormattingTokens, replace)\n\t\t\t}\n\t\t\tif (!formatFunctions[format]) {\n\t\t\t\tformatFunctions[format] = makeFormatFunction(format)\n\t\t\t}\n\t\t\tformat = formatFunctions[format](this)\n\t\t}\n\t\treturn moment.fn.format.call(this, format)\n\t}\n\n\thMoment.fn.iYear = function (input) {\n\t\tvar lastDay, h, g\n\t\tif (typeof input === 'number') {\n\t\t\th = toHijri(this.year(), this.month(), this.date())\n\t\t\tlastDay = Math.min(h.hd, hMoment.iDaysInMonth(input, h.hm))\n\t\t\tg = toGregorian(input, h.hm, lastDay)\n\t\t\tsetDate(this, g.gy, g.gm, g.gd)\n\t\t\t//Workaround: sometimes moment wont set the date correctly if current day is the last in the month\n\t\t\tif (this.month() !== g.gm || this.date() !== g.gd || this.year() !== g.gy) {\n\t\t\t\tsetDate(this, g.gy, g.gm, g.gd)\n\t\t\t}\n\t\t\tmoment.updateOffset(this)\n\t\t\treturn this\n\t\t} else {\n\t\t\treturn toHijri(this.year(), this.month(), this.date()).hy\n\t\t}\n\t}\n\n\thMoment.fn.iMonth = function (input) {\n\t\tvar lastDay, h, g\n\t\tif (input != null) {\n\t\t\tif (typeof input === 'string') {\n\t\t\t\tinput = this.localeData().iMonthsParse(input)\n\t\t\t\tif(input >= 0) {\n\t\t\t\t\tinput -= 1\n\t\t\t\t} else {\n\t\t\t\t\treturn this\n\t\t\t\t}\n\t\t\t}\n\t\t\th = toHijri(this.year(), this.month(), this.date())\n\t\t\tlastDay = Math.min(h.hd, hMoment.iDaysInMonth(h.hy, input))\n\t\t\tthis.iYear(h.hy + div(input, 12))\n\t\t\tinput = mod(input, 12)\n\t\t\tif (input < 0) {\n\t\t\t\tinput += 12\n\t\t\t\tthis.iYear(this.iYear() - 1)\n\t\t\t}\n\t\t\tg = toGregorian(this.iYear(), input, lastDay)\n\t\t\tsetDate(this, g.gy, g.gm, g.gd)\n\t\t\t//Workaround: sometimes moment wont set the date correctly if current day is the last in the month\n\t\t\tif (this.month() !== g.gm || this.date() !== g.gd || this.year() !== g.gy) {\n\t\t\t\tsetDate(this, g.gy, g.gm, g.gd)\n\t\t\t}\n\t\t\tmoment.updateOffset(this)\n\t\t\treturn this\n\t\t} else {\n\t\t\treturn toHijri(this.year(), this.month(), this.date()).hm\n\t\t}\n\t}\n\n\thMoment.fn.iDate = function (input) {\n\t\tvar h, g\n\t\tif (typeof input === 'number') {\n\t\t\th = toHijri(this.year(), this.month(), this.date())\n\t\t\tg = toGregorian(h.hy, h.hm, input)\n\t\t\tsetDate(this, g.gy, g.gm, g.gd)\n\t\t\t//Workaround: sometimes moment wont set the date correctly if current day is the last in the month\n\t\t\tif (this.month() !== g.gm || this.date() !== g.gd || this.year() !== g.gy) {\n\t\t\t\tsetDate(this, g.gy, g.gm, g.gd)\n\t\t\t}\n\t\t\tmoment.updateOffset(this)\n\t\t\treturn this\n\t\t} else {\n\t\t\treturn toHijri(this.year(), this.month(), this.date()).hd\n\t\t}\n\t}\n\n\thMoment.fn.iDayOfYear = function (input) {\n\t\tvar dayOfYear = Math.round((hMoment(this).startOf('day') - hMoment(this).startOf('iYear')) / 864e5) + 1\n\t\treturn input == null ? dayOfYear : this.add(input - dayOfYear, 'd')\n\t}\n\n\thMoment.fn.iDaysInMonth = function () {\n\t\treturn parseInt(hMoment(this).endOf('iMonth').format('iDD'));\n\t}\n\n\thMoment.fn.iWeek = function (input) {\n\t\tvar week = iWeekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).week\n\t\treturn input == null ? week : this.add( (input - week) * 7, 'd')\n\t}\n\n\thMoment.fn.iWeekYear = function (input) {\n\t\tvar year = iWeekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year\n\t\treturn input == null ? year : this.add(input - year, 'y')\n\t}\n\n\thMoment.fn.add = function (val, units) {\n\t\tvar temp\n\t\tif (units !== null && !isNaN(+units)) {\n\t\t\ttemp = val\n\t\t\tval = units\n\t\t\tunits = temp\n\t\t}\n\t\tunits = normalizeUnits(units)\n\t\tif (units === 'iyear') {\n\t\t\tthis.iYear(this.iYear() + val)\n\t\t} else if (units === 'imonth') {\n\t\t\tthis.iMonth(this.iMonth() + val)\n\t\t} else if (units === 'idate') {\n\t\t\tthis.iDate(this.iDate() + val)\n\t\t}\n\t\t else {\n\t\t\tmoment.fn.add.call(this, val, units)\n\t\t}\n\t\treturn this\n\t}\n\n\thMoment.fn.subtract = function (val, units) {\n\t\tvar temp\n\t\tif (units !== null && !isNaN(+units)) {\n\t\t\ttemp = val\n\t\t\tval = units\n\t\t\tunits = temp\n\t\t}\n\t\tunits = normalizeUnits(units)\n\t\tif (units === 'iyear') {\n\t\t\tthis.iYear(this.iYear() - val)\n\t\t} else if (units === 'imonth') {\n\t\t\tthis.iMonth(this.iMonth() - val)\n\t\t} else if (units === 'idate') {\n\t\t\tthis.iDate(this.iDate() - val)\n\t\t} else {\n\t\t\tmoment.fn.subtract.call(this, val, units)\n\t\t}\n\t\treturn this\n\t}\n\n\thMoment.fn.startOf = function (units) {\n\t\tunits = normalizeUnits(units)\n\t\tif (units === 'iyear' || units === 'imonth') {\n\t\t\tif (units === 'iyear') {\n\t\t\t\tthis.iMonth(0)\n\t\t\t}\n\t\t\tthis.iDate(1)\n\t\t\tthis.hours(0)\n\t\t\tthis.minutes(0)\n\t\t\tthis.seconds(0)\n\t\t\tthis.milliseconds(0)\n\t\t\treturn this\n\t\t} else {\n\t\t\treturn moment.fn.startOf.call(this, units)\n\t\t}\n\t}\n\n\thMoment.fn.endOf = function (units) {\n\t\tunits = normalizeUnits(units)\n\t\tif (units === undefined || units === 'milisecond') {\n\t\t\treturn this\n\t\t}\n\t\treturn this.startOf(units).add(1, (units === 'isoweek' ? 'week' : units)).subtract(1, 'milliseconds')\n\t}\n\n\thMoment.fn.clone = function () {\n\t\treturn hMoment(this)\n\t}\n\n\thMoment.fn.iYears = hMoment.fn.iYear\n\thMoment.fn.iMonths = hMoment.fn.iMonth\n\thMoment.fn.iDates = hMoment.fn.iDate\n\thMoment.fn.iWeeks = hMoment.fn.iWeek\n\n\t/************************************\n      hMoment Statics\n  ************************************/\n\n\thMoment.iDaysInMonth = function (year, month) {\n\t\tvar i = getNewMoonMJDNIndex(year, month + 1),\n\t\t\tdaysInMonth = ummalqura.ummalquraData[i] - ummalqura.ummalquraData[i - 1]\n\t\treturn daysInMonth\n\t}\n\n\tfunction toHijri(gy, gm, gd) {\n\t\tvar h = d2h(g2d(gy, gm + 1, gd))\n\t\th.hm -= 1\n\t\treturn h\n\t}\n\n\tfunction toGregorian(hy, hm, hd) {\n\t\tvar g = d2g(h2d(hy, hm + 1, hd))\n\t\tg.gm -= 1\n\t\treturn g\n\t}\n\n\thMoment.iConvert = {\n\t\ttoHijri: toHijri,\n\t\ttoGregorian: toGregorian\n\t}\n\n\treturn hMoment\n\n\t/************************************\n      Hijri Conversion\n  ************************************/\n\n\t/*\n    Utility helper functions.\n  */\n\n\tfunction div(a, b) {\n\t\treturn~~ (a / b)\n\t}\n\n\tfunction mod(a, b) {\n\t\treturn a - ~~(a / b) * b\n\t}\n\n\t/*\n    Converts a date of the Hijri calendar to the Julian Day number.\n\n    @param hy Hijri year (1356 to 1500)\n    @param hm Hijri month (1 to 12)\n    @param hd Hijri day (1 to 29/30)\n    @return Julian Day number\n  */\n\n\tfunction h2d(hy, hm, hd) {\n\t\tvar i = getNewMoonMJDNIndex(hy, hm),\n\t\t\tmjdn = hd + ummalqura.ummalquraData[i - 1] - 1,\n\t\t\tjdn = mjdn + 2400000;\n\t\treturn jdn\n\t}\n\n\t/*\n    Converts the Julian Day number to a date in the Hijri calendar.\n\n    @param jdn Julian Day number\n    @return\n      hy: Hijri year (1356 to 1500)\n      hm: Hijri month (1 to 12)\n      hd: Hijri day (1 to 29/30)\n  */\n\n\tfunction d2h(jdn) {\n\t\tvar mjdn = jdn - 2400000,\n\t\t\ti = getNewMoonMJDNIndexByJDN(mjdn),\n\t\t\ttotalMonths = i + 16260,\n\t\t\tcYears = Math.floor((totalMonths - 1) / 12),\n\t\t\thy = cYears + 1,\n\t\t\thm = totalMonths - 12 * cYears,\n\t\t\thd = mjdn - ummalqura.ummalquraData[i - 1] + 1\n\n\t\treturn {\n\t\t\thy: hy,\n\t\t\thm: hm,\n\t\t\thd: hd\n\t\t}\n\t}\n\n\t/*\n    Calculates the Julian Day number from Gregorian or Julian\n    calendar dates. This integer number corresponds to the noon of\n    the date (i.e. 12 hours of Universal Time).\n    The procedure was tested to be good since 1 March, -100100 (of both\n    calendars) up to a few million years into the future.\n\n    @param gy Calendar year (years BC numbered 0, -1, -2, ...)\n    @param gm Calendar month (1 to 12)\n    @param gd Calendar day of the month (1 to 28/29/30/31)\n    @return Julian Day number\n  */\n\n\tfunction g2d(gy, gm, gd) {\n\t\tvar d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod(gm + 9, 12) + 2, 5) + gd - 34840408\n\t\td = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752\n\t\treturn d\n\t}\n\n\t/*\n    Calculates Gregorian and Julian calendar dates from the Julian Day number\n    (hdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n    calendars) to some millions years ahead of the present.\n\n    @param jdn Julian Day number\n    @return\n      gy: Calendar year (years BC numbered 0, -1, -2, ...)\n      gm: Calendar month (1 to 12)\n      gd: Calendar day of the month M (1 to 28/29/30/31)\n  */\n\n\tfunction d2g(jdn) {\n\t\tvar j, i, gd, gm, gy\n\t\tj = 4 * jdn + 139361631\n\t\tj = j + div(div(4 * jdn + 183187720, 146097) * 3, 4) * 4 - 3908\n\t\ti = div(mod(j, 1461), 4) * 5 + 308\n\t\tgd = div(mod(i, 153), 5) + 1\n\t\tgm = mod(div(i, 153), 12) + 1\n\t\tgy = div(j, 1461) - 100100 + div(8 - gm, 6)\n\t\treturn {\n\t\t\tgy: gy,\n\t\t\tgm: gm,\n\t\t\tgd: gd\n\t\t}\n\t}\n\n\t/*\n    Returns the index of the modified Julian day number of the new moon\n    by the given year and month\n\n    @param hy: Hijri year (1356 to 1500)\n    @param hm: Hijri month (1 to 12)\n    @return\n        i: the index of the new moon in modified Julian day number.\n  */\n\tfunction getNewMoonMJDNIndex(hy, hm) {\n\t\tvar cYears = hy - 1,\n\t\t\ttotalMonths = (cYears * 12) + 1 + (hm - 1),\n\t\t\ti = totalMonths - 16260\n\t\treturn i\n\t}\n\n\t/*\n    Returns the nearest new moon\n\n    @param jdn Julian Day number\n    @return\n      i: the index of a modified Julian day number.\n  */\n\tfunction getNewMoonMJDNIndexByJDN(mjdn) {\n\t\tfor (var i = 0; i < ummalqura.ummalquraData.length; i=i+1) {\n\t\t\tif (ummalqura.ummalquraData[i] > mjdn)\n\t\t\t\treturn i\n\t\t}\n\t}\n\n});\n"],
  "mappings": "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",
  "names": ["moment", "i"]
}
